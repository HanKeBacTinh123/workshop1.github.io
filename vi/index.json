[
{
	"uri": "//localhost:1313/vi/1-basic-config/",
	"title": "Khởi tạo các thành phần cơ bản",
	"tags": [],
	"description": "",
	"content": "Bước 1: Ở bước này ta sẽ thực hiện khởi tạo VPC, Subnet, Security Group, Route tables, Internet Gateway, NAT Gateway và EC2 Instance tương ứng.\nKhởi tạo VPC: Đăng nhập vào AWS Console. Tìm chọn service VPC. Chọn Your VPCs ở thanh bên trái và chọn Create VPC. Lần lượt chọn VPC only, điền Name tag VPC A và nhập IPv4 CIDR theo kiến trúc rồi chọn Create VPC. Thực hiện tương tự cho VPC B, C và On Premises. Lưu ý cần bật thiết lập DNS Settings và Network Address Usage metrics settings trong Edit VPC settings. Xem lại các VPC vừa tạo. Khởi tạo Subnet tương ứng theo kiến trúc: Trong giao diện VPC, chọn Subnets, và chọn Create Subnet. Thực hiện cấu hình các Subnet tương ứng cho VPC A. Lưu ý cần cho phép tự động cấp phát public ip address cho 2 public subnet. Các subnet về cơ bản đều giống nhau, thông qua cấu hình route table và cấp phát public IP address mà chúng ta mới phân chia ra Public và Private Subnet.\nXem lại các Subnet vừa tạo. Thực hiện tương tự cho VPC B, VPC C, On Premises. Khởi tạo Security Groups tương ứng theo kiến trúc: Trong giao diện VPC, chọn Security Groups, và chọn Create security group. Thực hiện cấu hình Security Group cho Public Subnet. Security Group name, nhập Public Subnet SG VPC A. Description, nhập Allow SSH and Ping for servers in public subnet. Chọn VPC A trong mục VPC. Thêm Rules cho phép SSH vào từ MyIP và ping từ Anywhere trong Inbound rules. Kiểm tra Outbound rules và chọn Create security group. Thực hiện cấu hình Security Group cho Private Subnet. Security Group name, nhập Private Subnet SG VPC A. Description, nhập Allow SSH and Ping for servers in private subnet. Chọn VPC A trong mục VPC. Thêm Rules cho phép SSH vào từ Public Subnet SG VPC A và ping từ Anywhere trong Inbound rules. Kiểm tra Outbound rules và chọn Create security group. Thực hiện tương tự cho VPC B, VPC C, On Premises. Khởi tạo Route table tương ứng cho các VPC: Trong giao diện VPC, chọn Route tables và chọn Create route table. Thực hiện tạo Public Route Table và Private Route Table cho VPC A rồi gán chúng vào các subnets tương ứng. Thực hiện tương tự cho VPC B, C. Khởi tạo Internet Gateway tương ứng theo kiến trúc: Trong giao diện VPC, chọn Internet Gateways và chọn Create Internet Gateway. Thực hiện cấu hình Internet Gateway cho các VPC A, B, C và gán vào các VPC đó. Cập nhật Public Route Table của các VPC. Khởi tạo NAT Gateway tương ứng theo kiến trúc: Trong giao diện VPC, chọn NAT Gateways và chọn Create NAT Gateway. Thực hiện cấu hình Internet Gateway cho các VPC A, B, C và gán vào các VPC đó. Lưu ý chọn Public Subnet theo kiến trúc. Cập nhật Private Route Table của các VPC. Khởi tạo EC2 Instances tương ứng theo kiến trúc: Trên thanh tìm kiếm tìm EC2 và chọn services EC2. Chọn mục Instances và chọn Launch instances. Thực hiện cấu hình EC2: AMI là Amazon Linux 2 AMI (HVM). Instance Type t2.micro. Tạo Keypair mới Workshop1. Edit Network Settings theo kiến trúc. Kiểm tra và Launch instance. Thực hiện tương tự cho các EC2 còn lại. Lưu ý đối với các Private EC2 thì chọn Disable Auto-assign public IP. Kiểm tra kết nối. Đối với EC2 Public VPC A:\nĐối với EC2 Private VPC A:\nKiểm tra ta cũng có kết quả tương tự đối với các EC2 ở VPC B và C.\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Triển khai mô hình mạng Shared Services với Transit Gateway",
	"tags": [],
	"description": "",
	"content": "Triển khai mô hình mạng với Transit Gateway Tổng quan Ở bài thực hành Thiết lâp AWS Transit Gateway, ta đã tiến hành việc triển khai mô hình mạng đơn giản trên AWS Cloud với Transit Gateway nhằm đảm bảo khả năng kết nối giữa các VPC với nhau.\nTuy nhiên, trong thực tế, có những lúc chúng ta không muốn các VPC kết nối trực tiếp với nhau mà chúng chỉ cần kết nối tới “Shared Services VPC”. Trong bài lab này, theo kiến trúc mạng, VPC A sẽ đóng vai trò là “Shared Services” và VPC B, VPC C sẽ không thể giao tiếp với nhau nhưng đều có thể giao tiếp với với các dịch vụ chung (shared services) trong VPC A.\nKiến trúc mạng đươc triển khai:\nThêm vào đó, chúng ta cũng sẽ triển khai VPN Connection từ phía khách hàng On Premises đến với Transit Gateway để giao tiếp với các VPC.\nAWS Transit Gateway (AWS TGW) AWS Transite Gateway được dùng để kết nối các VPC và mạng On-premises thông qua một hub trung tâm. Điều này đơn giản hoá mạng và kết thúc các mối quan hệ định tuyến phức tạp. Nó hoạt động như một cloud router - mỗi kết nối mới chỉ thực hiện 1 lần.\nAWS Transit Gateway Attachment AWS Transit Gateway Attachment là một công cụ để gán các subnet của từng VPC cần kết nối với nhau vào một TGW đã được khởi tạo. Transit Gateway Attachment hoạt động dựa trên quy mô của Availability Zone (AZ-level). Trong VPC, khi một subnet ở một AZ có Transit Gateway Attachment với một TGW, các subnet khác trong cùng AZ đều có thể kết nối tới TGW đó.\nThiết lập Kết nối VPN (VPN Connection) Thiết lập VPN Connection (Kết nối VPN) giữa Transit Gateway và Customer Gateway device tại datacenter. Bởi vì đây là môi trường giả lập, ta sẽ sử dụng OpenSWAN chạy trên EC2 như là Customer Gateway.\nLưu ý về Region sử dụng để tạo VPC, trong bài lab sẽ là Singapore ap-southeast-1.\nCác bước thực hiện: Khởi tạo các thành phần cơ bản (VPC, Subnet, Security Groups, Route tables, Internet Gateway, NAT Gateway, EC2 Instance). Khởi tạo Transit Gateway và Transit Gateway Attachment. Khởi tạo VPN Connection. Dọn dẹp tài nguyên. "
},
{
	"uri": "//localhost:1313/vi/2-tgw-tgwa/",
	"title": "Khởi tạo Transit Gateway và Transit Gateway Attachment",
	"tags": [],
	"description": "",
	"content": "Bước 2: Ở bước này ta sẽ thực hiện khởi tạo Transit Gateway và Transit Gateway Attachment tương ứng.\nKhởi tạo Transit Gateway: Mở VPC Management Console, chọn Transit Gateway ở thanh bên trái, và chọn Create Transit Gateway. Cấu hình Transit Gateway, bỏ chọn Default route table association và Default route table propagation. Khởi tạo Transit Gateway Attachments: Chọn Transit Gateway Attachments ở thanh bên trái, và chọn Create Transit Gateway Attachment. Cấu hình Transit Gateway Attachment cho các VPC tương ứng. Tạo Transit Gateway Route Table. Chọn Transit Gateway Route Tables ở thanh bên trái, và chọn Create Transit Gateway Route Table. Hoàn tất điền Name tag và Transit Gateway ID. Sau khi TGW Route Table chuyển State sang Available, ta chuyển sang tab Associations và chọn Create associations. Lần lượt gán VPC B và VPC C. Tiếp theo, chuyển sang tab Propagations và chọn Create propagation và gán VPC A vào. Sau khi cấu hình Associations và Propagations như trên, traffic từ VPC B và C đều có thể đến được VPC A thông qua TGW Route Table với đường propagations đến với VPC A. Đồng thời, traffic từ VPC A không thể đến được VPC B và VPC C vì VPC A không còn nằm trong associations của TGW Route Table.\nĐể có traffic ngược lại từ VPC A, ta cần tạo 1 bảng mới Shared Services Route Table.\nTạo Shared Services Route Table, thực hiện tương tự trên. Sau khi TGW Route Table chuyển State sang Available, ta chuyển sang tab Associations và chọn Create associations rồi gán VPC A. Tiếp theo, chuyển sang tab Propagations và chọn Create propagation và gán VPC B và C vào. Thêm routes vào các VPC Route Tables. Chọn vào VPC A Private Route Table. Thêm các routes tới VPC B và VPC C với dest IP là của VPC B, C và target là Transit Gateway. Kiểm tra kết nối khi ping từ EC2 Private VPC này sang EC2 Private VPC kia. Từ EC2 Private VPC A sang EC2 Private VPC B.\nTừ EC2 Private VPC A sang EC2 Private VPC C.\nTừ EC2 Private VPC C sang EC2 Private VPC B.\nTừ EC2 Private VPC C sang EC2 Private VPC A.\nKết quả khi ping từ EC2 Private VPC B đến 2 EC2 Private VPC A và B tương tự như của EC2 Private VPC C.\nKết quả đúng như kiến trúc, VPC A là Shared Services, và VPC B và VPC C không thể giao tiếp với nhau.\n"
},
{
	"uri": "//localhost:1313/vi/3-vpn-connection/",
	"title": "Khởi tạo VPN Connection",
	"tags": [],
	"description": "",
	"content": "Bước 3: Ở bước này, ta sẽ thực hiện tạo 1 VPN Connection từ On Premises đến Transit Gateway để các máy chủ trong On Premises có thể giao tiếp với các VPC A, B, C.\nKhởi tạo TGW VPN Attachment: Chọn Transit Gateway Attachments ở thanh bên trái, và chọn Create Transit Gateway Attachment. Cấu hình Transit Gateway Attachment với Attachment Type là VPN. Trong mục VPN Attachment, Customer Gateway chọn New và IP Address chính là IP Public của On Premises Customer Gateway. Khởi tạo Site-to-Site VPN Connection: Sau khi khởi tạo TGW VPN Attachment, 1 VPN Connection sẽ được khởi tạo tương ứng. Chọn vào VPN Connection đó và chọn Dowload Configuration. Kiểm tra thông tin trong tab Tunnel Details. Ở đây ta sẽ chọn OpenSWAN và chọn Dowload.\nKhởi tạo Transit Gateway Route Table cho VPN: Thực hiện tương tự trên, ta tạo TGW Route Table VPN trong mục Transit Gateway Route Table. Gán VPN attachment vào tab Associations và gán các VPC vào mục Propagations.\nCập nhật Route Table với On Premises CIDR Cập nhật Shared Services Route Table và TGW Route Table. Ban đầu, route sẽ được tạo với state là \u0026lsquo;Blackhole\u0026rsquo; vì ta vẫn chưa thiết lập VPN Connection với On Premises.\nCập nhật các VPC Route Table. Thực hiện tương tự với VPC B, C.\nCập nhật On Premises Security Groups với việc thêm các rules có type là Custom UDP, port 500 và 4500 ứng với mỗi IP là IP của 2 tunnel. Cấu hình OpenSWAN và chuyển tunnel sang up Tạo IGW cho On Premises và Route Table chứa route tới IGW tương ứng. Kết nối SSH vào On Premises Customer Gateway. Cài đặt OpenSwan với 2 lệnh sudo su và yum install openswan -y Cấu hình file /etc/sysctl.conf với lệnh vi /etc/sysctl.conf. Chuyển xuống vị trí cuối cùng trong file cấu hình. Ấn phím i để tiến hành chỉnh sửa file. Thêm đoạn cấu hình sau vào cuối tập tin cấu hình. net.ipv4.ip_forward = 1\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.all.send_redirects = 0\nẤn phím ESC và tổ hợp :wq! để lưu file cấu hình. Sau đó để áp dụng cấu hình này, chạy lệnh: sysctl -p Tiếp theo chúng ta sẽ cấu hình file /etc/ipsec.d/aws.conf với lệnh vi /etc/ipsec.d/aws.conf. Thực hiện lần lượt các bước sau. Ấn phím i để tiến hành chỉnh sửa file. Thực hiện cấu hình như bên dưới. Chúng ta sẽ tạo 2 Tunnel với thông tin được lấy từ file cấu hình VPN Connection đã tải về. Đối với Amazon Linux thì chúng ta sẽ bỏ dòng auth=esp trong file cấu hình gốc. Vì ta chỉ có 1 public IP addres cho Customer Gateway nên sẽ cần thêm cấu hình overlapip=yes. leftid: IP Public Address phía Onprem. ( Ở đây chính là IP public của EC2 Customer Gateway trong ASG VPN VPC). rightid: IP Public Address phía AWS VPN Tunnel. leftsubnet: CIDR của Mạng phía On Premises. rightsubnet: CIDR của Mạng phía VPC trên AWS. Nhấn esc và :wq! để lưu cấu hình và thoát vim. Chạy lệnh vi /etc/ipsec.d/aws.secrets. Ấn phím i để tiến hành chỉnh sửa file. Thêm đoạn sau vào cuối tập tin cấu hình (đoạn cấu hình này ở bước 5 của IPSEC Tunnel #1 và IPSEC Tunnel #2). 13.215.201.189 18.136.185.96: PSK \u0026ldquo;R_9E1UV39Kl8OzYOVejIL7YdWbGYbyz4\u0026rdquo; 13.215.201.189 54.179.213.50: PSK \u0026ldquo;wdUWVok9j9Z26EtPN5_adrbyDcj3piTS\u0026rdquo; Ấn phím ESC và tổ hợp :wq! để lưu file cấu hình. Chạy lệnh cat /etc/ipsec.d/aws.secrets để kiểm tra nội dung file cấu hình. Khởi động lại Network service \u0026amp; IPSEC service với các câu lệnh: service network restart chkconfig ipsec on service ipsec start service ipsec status State của Tunnel:\nThực hiện ping từ EC2 Private VPC A, B, C đến On Premises Customer Gateway và ngược lại. Từ On Premises Customer Gateway đến EC2 Private VPC A:\nTừ EC2 Private VPC A đến On Premises Customer Gateway:\nTừ EC2 Private VPC B đến On Premises Customer Gateway:\nTừ On Premises Customer Gateway đến EC2 Private VPC C:\nKết quả cho thấy đã có thể giao tiếp giữa VPC A, B, C và On Premises.\n"
},
{
	"uri": "//localhost:1313/vi/4-clean-up/",
	"title": "Dọn dẹp các tài nguyên",
	"tags": [],
	"description": "",
	"content": "Bước 4: Thực hiện dọn dẹp các tài nguyên đã tạo:\nVPC A, B, C, On Premises. Các EC2 trong các Subnet. Internet Gateway và NAT Gateway. Elastic IP. Transit Gateway và Transit Gateway Attachments. VPN Connection. Có thể kiểm tra tổng quan ở EC2 Dashboard và VPC Dashboard.\nTổng kết: Workshop được thực hiện với các kiến thức cơ bản về AWS như: VPC, Availability zone, Subnet, EC2, VPN Connection và có kiến trúc còn khá đơn giản, thể hiện sự kết nối giữa các VPC và VPN với nhau thông qua Transit Gateway. Đây là bước đầu tiên của mình trong “hành trình lên mây”. Rất mong nhận được sự ủng hộ và góp ý của bạn đọc để có thể phát triển hơn nữa.\nWorkshop được thực hiện bởi: Lê Nhật - nhat.le1032002@hcmut.edu.vn "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]